@using Microsoft.AspNetCore.Components.Authorization;
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" Align="Align.Center">Jail Talk</MudText>
        </MudDrawerHeader>
        <JailTalk.Web.Shared.AppNavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            <ErrorBoundary>
                <ChildContent>
                    <div class="mt-6"></div>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <p class="errorUI">Oops, something went wrong</p>
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("login");
        }
    }
}