@using Microsoft.AspNetCore.Components.Authorization;
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense>
        @*<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />*@
        <MudLink Href="/" Typo="Typo.button" Underline="Underline.None" Color="Color.Inherit">Jail Connect </MudLink>
        <MudSpacer />
        <MudLink Href="/sign-out" Typo="Typo.subtitle1" Underline="Underline.None" Color="Color.Inherit" >Log out </MudLink>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MudDrawerHeader>
            <MudText Typo="Typo.h1" Align="Align.Center">Jail Taslk</MudText>
        </MudDrawerHeader>
        <JailTalk.Web.Shared.AppNavMenu />
    </MudDrawer>
    <MudMainContent>
        <ErrorBoundary>
            <ChildContent>
                <div class="mt-6"></div>
                @Body
            </ChildContent>
            <ErrorContent>
                <p class="errorUI">Oops, something went wrong</p>
            </ErrorContent>
        </ErrorBoundary>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("login");
        }
    }
}