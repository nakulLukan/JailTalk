@using JailTalk.Application.Dto.Identity;
@using JailTalk.Application.Requests.Identity;
@using JailTalk.Shared;
@using JailTalk.Web.Contracts.Events;
@using JailTalk.Web.Extensions;
@inject NavigationManager NavigationManager;
@inject IAppMediator AppMediator;

<HasPermissionComponent Roles="@Permissions.Admin" />
<Microsoft.AspNetCore.Components.Forms.EditForm Model="model" OnValidSubmit="OnSubmit">
    <Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator />
    <MudPaper Elevation="0">
        <MudGrid>
            <MudItem sm="12">
                <MudText Typo="Typo.h4">Enter account details</MudText>
            </MudItem>

            <MudItem sm="12">
                <MudTextField Label="Full Name" @bind-Value="@model.FullName" For="@(()=> model.FullName)"></MudTextField>
            </MudItem>
            <MudItem sm="12">
                <MudTextField Label="Username" @bind-Value="@model.Username" For="@(()=> model.Username)"></MudTextField>
            </MudItem>
            <MudItem sm="12">
                <MudTextField Label="Email Address" @bind-Value="@model.Email" For="@(()=> model.Email)"></MudTextField>
            </MudItem>
            <MudItem sm="12">
                <MudTextField Label="Account Password" @bind-Value="@model.Password"
                              InputType="InputType.Password" For="@(()=> model.Password)"></MudTextField>
            </MudItem>
            <MudItem sm="6">
                <JailTalk.Web.Components.Identity.RoleSelectComponent For="@(()=> model.RoleName)"
                @bind-Value="@model.RoleName" />
            </MudItem>
            <MudItem sm="6">
                <JailTalk.Web.Components.Prison.JailSelectComponent LabelName="Associated Prison" For="@(()=> model.PrisonId)"
                @bind-Value="@model.PrisonId" />
            </MudItem>

            <MudItem sm="12">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
                <MudButton ButtonType="ButtonType.Reset" Variant="Variant.Outlined" Color="Color.Surface">Clear</MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
</Microsoft.AspNetCore.Components.Forms.EditForm>

@code {
    AddUserAccountDto model = new();

    private async Task OnSubmit()
    {
        await AppMediator.Send(new AddUserAccountCommand
            {
                Email = model.Email.Trim(),
                FullName = model.FullName.Trim(),
                Password = model.Password.Trim(),
                PrisonId = model.PrisonId,
                RoleName = model.RoleName,
                Username = model.Username.Trim()
            })
        .OnSuccess(data =>
        {
            ToastService.Success("User account created successfully.");
            NavigationManager.NavigateTo("identity-management/user-accounts");
        })
        .OnError(err =>
        {
            ToastService.Error(err.Message);
        });
    }
}
