@page "/identity-management/user-accounts"
@using JailTalk.Application.Dto.Identity;
@using JailTalk.Application.Requests.Identity;
@using JailTalk.Web.Contracts.Events;
@using JailTalk.Web.Extensions;
@using MediatR;
@inject IMediator Mediator;
@inject IAppMediator AppMediator;
<HasPermissionComponent Roles="@Permissions.Admin" />
<MudContainer MaxWidth="MaxWidth.Medium">
    <MudDataGrid Items="@Elements" Virtualize="true" Filterable="true" Groupable="false" Bordered="true"
                 FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive" ShowMenuIcon="false">
        <ToolBarContent>
            <MudText Typo="Typo.h6">User Accounts</MudText>
            <MudSpacer />

            <MudLink Href="/identity-management/user-accounts/new">
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Add Account</MudButton>
            </MudLink>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.FullName" Title="Full Name" />
            <PropertyColumn Property="x => x.UserName" Title="Username" />
            <PropertyColumn Property="x => x.Email" Title="Email Address" />
            <PropertyColumn Property="x => x.RoleName" Title="Role" />
            <PropertyColumn Property="@(x => x.AssociatedPrison ?? "-")" Title="Prison Name" />
            <PropertyColumn Property="@(x => x.IsAccountLocked ? "Yes" : "No")" Title="Is Account Locked" />
            <TemplateColumn CellClass="d-flex justify-end" Filterable="false" Sortable="false">
                <CellTemplate>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                        <MudMenuItem>Change Role</MudMenuItem>
                        <MudMenuItem IconColor="Color.Error"
                                     OnClick="@(()=> LockOrUnLockUserAccount(context.Item.Id, context.Item.IsAccountLocked))">
                            @GetLockAccountMenuName(context.Item.IsAccountLocked)
                        </MudMenuItem>
                    </MudMenu>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <NoRecordsContent>
            <JailTalk.Web.Components.Common.NoRecordsComponent />
        </NoRecordsContent>
    </MudDataGrid>
</MudContainer>
@code {
    public List<UserAccountListDto> Elements { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        Elements = await Mediator.Send(new UserAccountsQuery());
        StateHasChanged();
    }
    private string GetLockAccountMenuName(bool isLocked)
    {
        return isLocked ? "Unlock Account" : "Block Account";
    }

    private async Task LockOrUnLockUserAccount(string userAccountId, bool isLocked)
    {
        await AppMediator.Send(new LockOrUnlockUserAccountCommand
            {
                UserAccountId = userAccountId,
                LockAccount = !isLocked
            })
        .OnSuccess(async data =>
        {
            string message = isLocked ? "unlocked" : "locked";

            // Update that particular record value to avoid unneccesary reload.
            Elements.First(x => x.Id == userAccountId).IsAccountLocked = !isLocked;
            ToastService.Success($"User account {message} successfully");
            await InvokeAsync(StateHasChanged);
        })
        .OnError(err =>
        {
            ToastService.Error(err.Message);
        });
    }
}
