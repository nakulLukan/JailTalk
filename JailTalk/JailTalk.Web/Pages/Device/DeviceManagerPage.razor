@page "/device-manager"
@using JailTalk.Application.Contracts.Storage;
@using JailTalk.Application.Dto.Device;
@using JailTalk.Application.Requests.Device;
@using JailTalk.Web.Contracts.Events;
@using JailTalk.Web.Extensions;
@using JailTalk.Web.Impl.Events;
@using MediatR;
@using System.Text;
@inject IMediator Mediator;
@inject NavigationManager NavigationManager;

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudDataGrid Items="@Elements" Virtualize="true" Groupable="false" Bordered ShowMenuIcon="false" FixedHeader Dense 
                  Hover RowClass="cursor-pointer">
            <ToolBarContent>
                <MudText Typo="Typo.h6"><b>Device Manager </b></MudText>
                <MudSpacer />
                <MudLink Href="/device-manager/new">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary">Register Device</MudButton>
                </MudLink>
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Serial" Title="S/L" />
                <PropertyColumn Property="x => x.Code" Title="Device Code" />
                <PropertyColumn Property="x => x.Prison" Title="Prison" />
                <PropertyColumn Property="@(context=> context.IsActive ? "Enabled" : "Disabled")" Title="Status" />
                <PropertyColumn Property="x=> x.DeviceSecret" Title="Device Secret" />
                <TemplateColumn Title="Action">
                    <CellTemplate>
                        <MudButton  OnClick="@(()=> OnEditClicked(context.Item.DeviceId.ToString()))" Variant="Variant.Filled">Edit</MudButton>
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
            <NoRecordsContent>
                <JailTalk.Web.Components.Common.NoRecordsComponent />
            </NoRecordsContent>
        </MudDataGrid>
    </MudContainer>

    @code {
    private bool _loading = true;
    private string searchString1 = "";
    private DeviceListDto selectedItem1 = null;
    private HashSet<DeviceListDto> selectedItems = new HashSet<DeviceListDto>();

    private List<DeviceListDto> Elements = new List<DeviceListDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Elements = (await Mediator.Send(new GetAllDevicesRequest())).Data;
            _loading = false;
            StateHasChanged();
        }
    }

    private bool FilterFunc1(DeviceListDto element) => FilterFunc(element, searchString1);

    private bool FilterFunc(DeviceListDto element, string searchString)
    {
        return false;
    }

    private void OnEditClicked(string deviceId)
    {
        NavigationManager.NavigateTo($"device-manager/edit/{deviceId}");
    }
}