@page "/prisons"
@using JailTalk.Application.Dto.Jail;
@using JailTalk.Application.Requests.Jail;
@using MediatR;
@inject IMediator Mediator;

<HasPermissionComponent Roles="@Permissions.Admin" />

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudDataGrid Items="@Elements" Virtualize="true" Groupable="false" Bordered="true" ShowMenuIcon="false" FixedHeader="true">
        <ToolBarContent>
            <MudText Typo="Typo.h6"><b>Prisons</b></MudText>
            <MudSpacer />
            <MudLink Href="/prisons/new">
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Add New Prison</MudButton>
            </MudLink>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.Code" Title="Prison Code" />
            <PropertyColumn Property="x => x.Name" Title="Prison Name" />
            <PropertyColumn Property="x => x.AddressAsText" Title="Address" />
        </Columns>
        <NoRecordsContent>
            <JailTalk.Web.Components.Common.NoRecordsComponent />
        </NoRecordsContent>
    </MudDataGrid>
</MudContainer>
@code {
    List<PrisonListDto> Elements = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        Elements = await Mediator.Send(new GetPrisonsQuery());
        StateHasChanged();
    }
}
