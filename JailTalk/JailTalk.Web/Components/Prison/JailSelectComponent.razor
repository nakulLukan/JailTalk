@using JailTalk.Application.Dto.Prison;
@using JailTalk.Application.Requests.Jail;
@using MediatR;
@using System.Linq.Expressions;
@inject IMediator Mediator;

<MudSelect Label="@LabelName" AnchorOrigin="Origin.BottomCenter" @bind-Value="@Value" For="For">
    <MudSelectItem T="int?" Value="default(int?)" >Select</MudSelectItem>
    @foreach (var prison in prisons)
    {
        <MudSelectItem T="int?" Value="prison.Id">@prison.Name</MudSelectItem>
    }
</MudSelect>
@code {
    List<JailNameDto> prisons = new();

    [Parameter]
    public string LabelName { get; set; } = "Prison";

    private int? _value;
    [Parameter]
    public int? Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
    [Parameter]
    public EventCallback<int?> ValueChanged { get; set; }

    [Parameter]
    [Category("Validation")]
    public Expression<Func<int?>> For { get; set; }

    protected override async Task OnInitializedAsync()
    {
        prisons = await Mediator.Send(new GetJailNamesQuery());
    }
}
